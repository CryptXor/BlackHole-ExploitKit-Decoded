<?php 

class Browser
{
    public static $icons = array( "browsers" => array( "msie", "firefox", "opera", "chrome", "safari", "mozilla", "flock", "amaya", "aol", "avant", "camino", "konqueror", "lynx", "mosaic", "netscape", "omniweb", "seamonkey", "theworld" ), "oses" => array( "win_xp", "win_vista", "win7", "win_ser_2003", "win98", "win98", "win98", "win98", "win98", "linux", "macos", "openbsd", "beos", "theworld" ) );
    public static $browsers = array( "MSIE", "Firefox", "Opera", "Chrome", "Safari", "Mozilla", "Flock", "Amaya", "Aol", "Avant", "Camino", "Konqueror", "Lynx", "Mosaic", "Netscape", "Omniweb", "Seamonkey", "Other browser" );
    public static $browsers2 = array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 16, 17 );
    public static $OSList = array( "Windows XP" => "(Windows NT 5.1)|(Windows XP)", "Windows Vista" => "(Windows NT 6.0)", "Windows 7" => "(Windows NT 7.0)|(Windows NT 6.1)", "Windows 2003" => "(Windows NT 5.2)", "Windows 95" => "(Windows 95)|(Win95)|(Windows_95)", "Windows 98" => "(Windows 98)|(Win98)", "Windows 2000" => "(Windows NT 5.0)|(Windows 2000)", "Windows ME" => "Windows ME", "Windows NT" => "(Windows NT 4.0)|(WinNT4.0)|(WinNT)|(Windows NT)", "Linux" => "(Linux)|(X11)", "Mac OS" => "(Mac_PowerPC)|(Macintosh)", "Open BSD" => "OpenBSD", "BeOS" => "BeOS", "Other OS" => "(Other)" );
    public static $OSList2 = array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 13 );
    public static $exploits = array( "MDAC", "Java SMB", "HCP", "PDF", "PDF LibTiff", "IEPeers", "Java OBE" );
    public static $countryCodes = array( "ot", "AP", "EU", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IN", "IO", "IQ", "IR", "IS", "IT", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TM", "TN", "TO", "TL", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "RS", "ZA", "ZM", "ME", "ZW", "A1", "A2", "O1", "AX", "GG", "IM", "JE", "BL", "MF" );
    public static $countryNames = array( "Other country", "Asia/Pacific Region", "Europe", "Andorra", "United Arab Emirates", "Afghanistan", "Antigua and Barbuda", "Anguilla", "Albania", "Armenia", "Netherlands Antilles", "Angola", "Antarctica", "Argentina", "American Samoa", "Austria", "Australia", "Aruba", "Azerbaijan", "Bosnia and Herzegovina", "Barbados", "Bangladesh", "Belgium", "Burkina Faso", "Bulgaria", "Bahrain", "Burundi", "Benin", "Bermuda", "Brunei Darussalam", "Bolivia", "Brazil", "Bahamas", "Bhutan", "Bouvet Island", "Botswana", "Belarus", "Belize", "Canada", "Cocos (Keeling) Islands", "Congo, The Democratic Republic of the", "Central African Republic", "Congo", "Switzerland", "Cote D`Ivoire", "Cook Islands", "Chile", "Cameroon", "China", "Colombia", "Costa Rica", "Cuba", "Cape Verde", "Christmas Island", "Cyprus", "Czech Republic", "Germany", "Djibouti", "Denmark", "Dominica", "Dominican Republic", "Algeria", "Ecuador", "Estonia", "Egypt", "Western Sahara", "Eritrea", "Spain", "Ethiopia", "Finland", "Fiji", "Falkland Islands (Malvinas)", "Micronesia, Federated States of", "Faroe Islands", "France", "France, Metropolitan", "Gabon", "United Kingdom", "Grenada", "Georgia", "French Guiana", "Ghana", "Gibraltar", "Greenland", "Gambia", "Guinea", "Guadeloupe", "Equatorial Guinea", "Greece", "South Georgia and the South Sandwich Islands", "Guatemala", "Guam", "Guinea-Bissau", "Guyana", "Hong Kong", "Heard Island and McDonald Islands", "Honduras", "Croatia", "Haiti", "Hungary", "Indonesia", "Ireland", "Israel", "India", "British Indian Ocean Territory", "Iraq", "Iran, Islamic Republic of", "Iceland", "Italy", "Jamaica", "Jordan", "Japan", "Kenya", "Kyrgyzstan", "Cambodia", "Kiribati", "Comoros", "Saint Kitts and Nevis", "Korea, Democratic People's Republic of", "Korea, Republic of", "Kuwait", "Cayman Islands", "Kazakhstan", "Lao People`s Democratic Republic", "Lebanon", "Saint Lucia", "Liechtenstein", "Sri Lanka", "Liberia", "Lesotho", "Lithuania", "Luxembourg", "Latvia", "Libyan Arab Jamahiriya", "Morocco", "Monaco", "Moldova, Republic of", "Madagascar", "Marshall Islands", "Macedonia", "Mali", "Myanmar", "Mongolia", "Macau", "Northern Mariana Islands", "Martinique", "Mauritania", "Montserrat", "Malta", "Mauritius", "Maldives", "Malawi", "Mexico", "Malaysia", "Mozambique", "Namibia", "New Caledonia", "Niger", "Norfolk Island", "Nigeria", "Nicaragua", "Netherlands", "Norway", "Nepal", "Nauru", "Niue", "New Zealand", "Oman", "Panama", "Peru", "French Polynesia", "Papua New Guinea", "Philippines", "Pakistan", "Poland", "Saint Pierre and Miquelon", "Pitcairn Islands", "Puerto Rico", "Palestinian Territory", "Portugal", "Palau", "Paraguay", "Qatar", "Reunion", "Romania", "Russian Federation", "Rwanda", "Saudi Arabia", "Solomon Islands", "Seychelles", "Sudan", "Sweden", "Singapore", "Saint Helena", "Slovenia", "Svalbard and Jan Mayen", "Slovakia", "Sierra Leone", "San Marino", "Senegal", "Somalia", "Suriname", "Sao Tome and Principe", "El Salvador", "Syrian Arab Republic", "Swaziland", "Turks and Caicos Islands", "Chad", "French Southern Territories", "Togo", "Thailand", "Tajikistan", "Tokelau", "Turkmenistan", "Tunisia", "Tonga", "Timor-Leste", "Turkey", "Trinidad and Tobago", "Tuvalu", "Taiwan", "Tanzania, United Republic of", "Ukraine", "Uganda", "United States Minor Outlying Islands", "United States", "Uruguay", "Uzbekistan", "Holy See (Vatican City State)", "Saint Vincent and the Grenadines", "Venezuela", "Virgin Islands, British", "Virgin Islands, U.S.", "Vietnam", "Vanuatu", "Wallis and Futuna", "Samoa", "Yemen", "Mayotte", "Serbia", "South Africa", "Zambia", "Montenegro", "Zimbabwe", "Anonymous Proxy", "Satellite Provider", "Other country", "Aland Islands", "Guernsey", "Isle of Man", "Jersey", "Saint Barthelemy", "Saint Martin" );

    public static function compareIP($ip, $mask)
    {
        $arr = explode(".", $ip);
        $arr2 = explode(".", $mask);
        $good = true;
        for( $i = 0; $i < count($arr); $i++ ) 
        {
            if( $arr2[$i] != "*" && $arr2[$i] != $arr[$i] ) 
            {
                $good = false;
                break;
            }

        }
        return $good;
    }

    public static function getBrowserAndOS($user_agent = null, $ipaddr = null)
    {
        if( $user_agent == null ) 
        {
            $user_agent = (isset($_SERVER["HTTP_USER_AGENT"]) ? $_SERVER["HTTP_USER_AGENT"] : "");
        }

        $user_agent = strtolower($user_agent);
        if( $ipaddr == null ) 
        {
            $ipaddr = (isset($_SERVER["REMOTE_ADDR"]) ? $_SERVER["REMOTE_ADDR"] : "");
        }

        $browser = array( "version" => "0.0.0", "name" => "unknown", "useragent" => "", "os" => "", "countryCode" => "", "countryName" => "", "BrowserID" => 0, "OSID" => 0, "CountryID" => 0 );
        if( $user_agent != "" ) 
        {
            $browser["useragent"] = $user_agent;
            foreach( Browser::$browsers as $id => $_browser ) 
            {
                if( preg_match("" . "/(" . $_browser . ")[\\/ ]?([0-9.]*)/i", $user_agent, $match) ) 
                {
                    $browser["name"] = $match[1];
                    $version = (double) $match[2];
                    $browser["version"] = $version;
                    $browser["BrowserID"] = $id;
                    break;
                }

            }
            $i = 0;
            foreach( Browser::$OSList as $CurrOS => $Match ) 
            {
                if( preg_match("/" . $Match . "/", $_SERVER["HTTP_USER_AGENT"]) ) 
                {
                    $browser["os"] = $CurrOS;
                    $browser["OSID"] = $i;
                    break;
                }

                $i++;
            }
        }

        if( $ipaddr != "" ) 
        {
            $browser["ip"] = $ipaddr;
            $filehandle = fopen(Config::get("LibDir") . "/data.dat", "rb") or exit( "Can not open data.dat\n" );
            $filepos = ftell($filehandle);
            fseek($filehandle, 0 - 3, SEEK_END);
            for( $i = 0; $i < 20; $i++ ) 
            {
                fseek($filehandle, 0 - 4, SEEK_CUR);
            }
            fseek($filehandle, $filepos, SEEK_SET);
            $ipnum = ip2long($ipaddr);
            $country_id = 0;
            $offset = 0;
            for( $depth = 31; 0 <= $depth; $depth-- ) 
            {
                fseek($filehandle, 2 * 3 * $offset, SEEK_SET) == 0 or exit( "fseek failed" );
                $buf = fread($filehandle, 2 * 3);
                $x = array( 0, 0 );
                for( $i = 0; $i < 2; $i++ ) 
                {
                    for( $j = 0; $j < 3; $j++ ) 
                    {
                        $x[$i] += ord($buf[3 * $i + $j]) << $j * 8;
                    }
                }
                if( $ipnum & 1 << $depth ) 
                {
                    if( 16776960 <= $x[1] ) 
                    {
                        $country_id = $x[1];
                        break;
                    }

                    $offset = $x[1];
                }
                else
                {
                    if( 16776960 <= $x[0] ) 
                    {
                        $country_id = $x[0];
                        break;
                    }

                    $offset = $x[0];
                }

            }
            $country_id -= 16776960;
            $browser["countryCode"] = Browser::$countryCodes[$country_id];
            $browser["countryName"] = Browser::$countryNames[$country_id];
            $browser["CountryID"] = $country_id;
            fclose($filehandle);
        }

        return $browser;
    }

}


