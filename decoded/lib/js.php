<?php 

class JSMin
{
    public static function minify($str)
    {
        $data = array( "\n", "\r", "\t" );
        return str_replace($data, "", $str);
    }

}


class JS
{
    public function RandomezeVar($text)
    {
        $alphabet = "qwertyuiopasdfghjklzxcvbnm";
        $minLen = 3;
        $maxLen = 5;
        $alphabetLen = strlen($alphabet);
        $ereg = "/<\\*[^>]+>/";
        preg_match_all($ereg, $text, $arr);
        $arr2 = array_unique($arr[0]);
        $used = array(  );
        foreach( $arr2 as $var ) 
        {
            $good = false;
            while( !$good ) 
            {
                $replacement = "";
                $len = $minLen + rand() % ($maxLen - $minLen + 1);
                for( $i = 0; $i < $len; $i++ ) 
                {
                    $char = $alphabet[rand() % $alphabetLen];
                    $replacement .= $char;
                }
                if( !in_array($replacement, $used) ) 
                {
                    $good = true;
                    $used[$var] = $replacement;
                }

            }
        }
        $text = str_replace(array_keys($used), $used, $text);
        return $text;
    }

    public function CryptJS($string)
    {
        $crypt_key = rand() % 2 * 2 + 2;
        $crypt_cookie = "e";
        $content = _obfuscated_0D361C0B152F0D0813040F0F050B19232F14361D1E2732_($string);
        $string = str_split("eval");
        $i = 0;
        for( $content_eval = ""; $i < count($string); $i++ ) 
        {
            $content_eval .= ord($string[$i]) / $crypt_key . "*" . $crypt_cookie . ",";
        }
        $content_eval = substr($content_eval, 0, 0 - 1);
        return trim(JSMin::minify(self::randomezevar("\r\n\t\t\tfunction createCSS(selector, declaration) {\r\n\t\t\t\tvar ua = navigator.userAgent.toLowerCase();\r\n\t\t\t\tvar isIE = (/msie/.test(ua)) && !(/opera/.test(ua)) && (/win/.test(ua));\r\n\t\t\t\tvar style_node = document.createElement(\"style\");\r\n\t\t\t\tif (!isIE) style_node.innerHTML = selector + \" {\" + declaration + \"}\";\r\n\t\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(style_node);\r\n\t\t\t\tif (isIE && document.styleSheets && document.styleSheets.length > 0) {\r\n\t\t\t\t\tvar last_style_node = document.styleSheets[document.styleSheets.length - 1];\r\n\t\t\t\t\tif (typeof(last_style_node.addRule) == \"object\") last_style_node.addRule(selector, declaration);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar <*CRYPT_CLASS> = {\r\n\r\n\t\t\t\t<*decrypt>: function(){\r\n\t\t\t\t\tcreateCSS(\"#c0\",\"background: url(data:,eval)\");\r\n\t\t\t\t\tvar <*res> = null;\r\n\t\t\t\t\tvar r = document.styleSheets;\r\n\t\t\t\t\tfor (var i=0;i<r.length;i++) {\r\n\t\t\t\t\t\tvar <*rules> = r[i].cssRules || r[i].rules;\r\n\t\t\t\t\t\tfor(var <*i> = 0; <*i> < <*rules>.length; <*i>++) {\r\n\t\t\t\t\t\t\tvar <*r> = <*rules>.item ? <*rules>.item(<*i>) : <*rules>[<*i>];\r\n\t\t\t\t\t\t\tif (!<*r>.selectorText.match(/#c(\\d+)/)) continue;\r\n\t\t\t\t\t\t\t<*res> = <*r>.style.backgroundImage.match(/url\\(\"?data\\:[^,]*,([^\")]+)\"?\\)/)[1];\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar <*w> = \"" . $content . "\".split(\",\");\r\n\t\t\t\t\tvar s = \"\";\r\n\t\t\t\t\t<*middle> = function(<*w>){return {e:<*w>.length/2}}(<*w>).e;\r\n\t\t\t\t\t<*ee> = function(){return {e:eval}}().e;\r\n\t\t\t\t\t<*e> = <*ee>(<*res>);\r\n\t\t\t\t\t<*date> = new Date(2010,11,3,2,21,4);\r\n\t\t\t\t\tvar <*qq> = \"fro\"+<*date>.getSeconds()+\"arCode\";\r\n\t\t\t\t\t<*qq>=<*qq>.replace(4,\"mCh\");\r\n\t\t\t\t\t<*ss>=String[<*qq>];\r\n\t\t\t\t\tfor (var i = 0; i < <*middle>; i++) {\r\n\t\t\t\t\t\t<*q> = -0.25*<*date>.getSeconds()*parseInt(<*w>[<*middle>+i]) + parseInt(<*w>[i]);\r\n\t\t\t\t\t\t<*ss>.call(<*q>);\r\n\t\t\t\t\t\ts += (<*ss>(<*q>));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<*e>(s);\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\t<*CRYPT_CLASS>.<*decrypt>();\r\n\t\t")));
    }

}

function _obfuscated_0D361C0B152F0D0813040F0F050B19232F14361D1E2732_($str)
{
    $_obfuscated_0D0505071A06321C2F5C2C13332A211432183B150A2601_ = JS::randomezevar($str);
    $len = strlen($_obfuscated_0D0505071A06321C2F5C2C13332A211432183B150A2601_);
    $res = array(  );
    $_obfuscated_0D2D0B38092A352F1509011724081603093E211E1A0D22_ = array(  );
    for( $i = 0; $i < $len; $i++ ) 
    {
        $n = rand() % 12345 + 1234;
        $res[] = $n;
        $_obfuscated_0D2D0B38092A352F1509011724081603093E211E1A0D22_[] = $n - ord($_obfuscated_0D0505071A06321C2F5C2C13332A211432183B150A2601_[$i]);
    }
    $text = implode(",", $res) . "," . implode(",", $_obfuscated_0D2D0B38092A352F1509011724081603093E211E1A0D22_);
    return $text;
}


