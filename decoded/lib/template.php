<?php 
define("TEMPLATE_VARIABLE", "Template");

class Template
{
    public static function show($name = "")
    {
        $fileName = "./" . Config::get("LibDir", "lib") . "/" . Config::get("TemplatesDir", "templates") . "/" . self::getcurtemplate() . "/" . $name . ".php";
        if( !file_exists($fileName) ) 
        {
            return "";
        }

        ob_start();
        include($fileName);
        $result = ob_get_contents();
        ob_clean();
        return $result;
    }

    public static function getAllTemplates()
    {
        $all = scandir("./" . Config::get("LibDir", "lib") . "/" . Config::get("TemplatesDir", "templates") . "/");
        $result = array(  );
        foreach( $all as $template ) 
        {
            if( $template == "." ) 
            {
                continue;
            }

            if( $template == ".." ) 
            {
                continue;
            }

            $dirName = "./" . Config::get("LibDir", "lib") . "/" . Config::get("TemplatesDir", "templates") . "/" . $template;
            if( !is_dir($dirName) ) 
            {
                continue;
            }

            $result[] = $template;
        }
        return $result;
    }

    public static function isSetTemplate()
    {
        return isset($_SESSION[TEMPLATE_VARIABLE]);
    }

    public static function getCurTemplate()
    {
        return (isset($_SESSION[TEMPLATE_VARIABLE]) ? $_SESSION[TEMPLATE_VARIABLE] : Config::get("DefaultTemplate"));
    }

    public static function setCurTemplate($curTemplate)
    {
        $_SESSION[TEMPLATE_VARIABLE] = $curTemplate;
    }

    public static function setCurTemplateIfNotSet($curTemplate)
    {
        if( !self::issettemplate() ) 
        {
            self::setcurtemplate($curTemplate);
        }

    }

}


