<?php 

class db
{
    public static function create($host, $user, $pass, $name)
    {
        global $database;
        try
        {
            $database = new database($host, $user, $pass, $name);
        }
        catch( Exception $e ) 
        {
            exit();
        }
    }

    public static function close()
    {
        mysql_close();
    }

    public static function select($sql)
    {
        global $database;
        return $database->select($sql);
    }

    public static function selectOne($what, $from, $where, $sortby = "", $sortdest = "")
    {
        global $database;
        return $database->selectOne($what, $from, $where, $sortby, $sortdest);
    }

    public static function insert($row, $table)
    {
        global $database;
        return $database->insert($row, $table);
    }

    public static function update($id, $row, $table, $idName = "ID")
    {
        global $database;
        return $database->update($id, $row, $table, $idName);
    }

    public static function deleteById($id, $table, $idName = "ID")
    {
        global $database;
        return $database->deleteById($id, $table, $idName);
    }

    public static function tables()
    {
        global $database;
        return $database->tables();
    }

    public static function fields($table)
    {
        global $database;
        return $database->fields($table);
    }

    public static function query($sql)
    {
        global $database;
        return $database->query($sql);
    }

}


class database
{
    private $host = "localhost";
    private $user = "root";
    private $pass = "";
    private $name = "";
    public $qCount = 0;

    public function __construct($host, $user, $pass, $name)
    {
        $this->host = $host;
        $this->user = $user;
        $this->pass = $pass;
        $this->name = $name;
        if( !@mysql_connect($this->host, $this->user, $this->pass) ) 
        {
            throw new exception(mysql_error());
        }

        if( !@mysql_select_db($this->name) ) 
        {
            throw new exception("unable to select database");
        }

        mysql_query("SET CHARACTER SET UTF8");
    }

    public function query($query)
    {
        $this->qCount++;
        if( $result = mysql_query($query) ) 
        {
            return $result;
        }

        throw new exception(mysql_error());
    }

    public function fetch_all($result)
    {
        $all = array(  );
        $all[] = mysql_fetch_assoc($result);
        if( $all ) 
        {
        }
        else
        {
            return $all;
        }

    }

    public function fetch_array($result)
    {
        return mysql_fetch_array($result);
    }

    public function count($result)
    {
        $count = mysql_numrows($result);
        return $count;
    }

    public function selectOne($what, $from, $where, $sortby = "", $sortdest = "")
    {
        $query = "select " . $what . " from `" . $from . "` where " . $where;
        if( $sortby !== "" ) 
        {
            $query .= " order by " . $sortby . " " . $sortdest;
        }

        $result = $this->query($query);
        if( $this->count($result) == 0 ) 
        {
            return null;
        }

        $row = mysql_fetch_assoc($result);
        return ($what == "*" ? $row : $row[$what]);
    }

    public function insert($row, $table)
    {
        $query = "INSERT INTO " . $table . " (";
        foreach( $row as $key => $value ) 
        {
            $query .= "`" . $key . "`,";
        }
        $query .= ") VALUES (";
        foreach( $row as $key => $value ) 
        {
            $query .= "\"" . str_replace("\"", "\\\"", $value) . "\",";
        }
        $query .= ")";
        $query = str_replace(",)", ")", $query);
        $this->query($query);
        return mysql_insert_id();
    }

    public function update($id, $row, $table, $idName = "id")
    {
        $query = "UPDATE `" . $table . "` SET ";
        foreach( $row as $key => $value ) 
        {
            $query .= "`" . $key . "`=\"" . str_replace("\"", "\\\"", $value) . "\", ";
        }
        $query .= "WHERE `" . $idName . "`=\"" . $id . "\"";
        $query = str_replace(", W", " W", $query);
        $this->query($query);
    }

    public function deleteById($id, $table, $idName = "id")
    {
        $query = "DELETE FROM " . $table . " WHERE `" . $idName . "`=\"" . $id . "\"";
        return $this->query($query);
    }

    public function add_field($table, $field)
    {
        $this->query("alter table " . $table . " add " . $field . ";");
    }

    public function select($query)
    {
        $res = $this->query($query);
        $rows = $this->fetch_all($res);
        $res = array(  );
        for( $i = 0; $i < count($rows) - 1; $i++ ) 
        {
            $res[] = $rows[$i];
        }
        return $res;
    }

    public function tables()
    {
        $res = mysql_list_tables($this->name);
        $ar = array(  );
        while( $row = mysql_fetch_row($res) ) 
        {
            $ar[] = $row[0];
        }
        return $ar;
    }

    public function fields($table)
    {
        $fields = $this->select("SHOW COLUMNS FROM " . $table);
        $ar = array(  );
        foreach( $fields as $field ) 
        {
            $ar[$field["Field"]] = $field["Type"];
        }
        return $ar;
    }

}


